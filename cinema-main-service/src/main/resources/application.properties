server.port=${MAIN_SERVER_PORT:8080}
spring.application.name=cinema-main
logging.level.root=INFO
#
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/cinema}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:2236}
#
films.api.url=${FILM_API_URL:http://localhost:8765/film-service}
#
#spring.cloud.stream.bindings.output.destination=films
#spring.cloud.stream.bindings.output.content-type=application/json
#spring.cloud.stream.kafka.binder.producer-properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.type.mapping=requestAddFilms:ru.cinema.model.dto.RequestAddFilms
spring.kafka.bootstrap-servers=localhost:9092
#
spring.liquibase.driver-class-name=org.postgresql.Driver
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:/db/changelog/db.changelog.xml
spring.liquibase.default-schema=public
#---
spring.config.activate.on-profile=test
spring.datasource.url=jdbc:h2:./testdb;MODE=PostgreSQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;
spring.datasource.username=
spring.datasource.password=
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:/db/changelog/db.changelog.xml
spring.liquibase.default-schema=public
spring.liquibase.url=jdbc:h2:./testdb;MODE=PostgreSQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE;